import torch
import torch.nn as nn
from torchvision import models
import torch.nn.functional as F
import torchvision.transforms as T
from torch.utils.data import TensorDataset, DataLoader

from efficientnet_pytorch import EfficientNet

import numpy as np
from PIL import Image
from tqdm import trange
from time import sleep
from matplotlib import pyplot as plt

import streamlit as st

import sys
# "sys.path.append(r"../")
# from EfficientNetModel import EfficientNetModel


st.set_page_config(
    page_title="Tumor Classifier",
    page_icon="üß†",
    layout="wide",
    initial_sidebar_state="expanded",
    menu_items={
        'Get Help': 'https://www.extremelycoolapp.com/help',
        'Report a bug': "https://www.extremelycoolapp.com/bug",
        'About': "# This is a header. This is an *extremely* cool app!"
    }
)

st.title("BRAIN TUMOR CLASSIFIER")
st.write("""–°–∞–π—Ç –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –ú–†–¢ —Å–Ω–∏–º–∫–æ–≤ –∏ –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏ –æ–ø—É—Ö–æ–ª–µ–π –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–æ–∑–≥–∞ —Ç—Ä–µ—Ö —Ç–∏–ø–æ–≤: –≥–ª–∏–æ–º–∞, –º–µ–Ω–∏–Ω–≥–∏–æ–º–∞ –∏ pituitary.""")

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–æ–∫–æ–≤–æ–π –ø–∞–Ω–µ–ª–∏
st.sidebar.title("–ß—Ç–æ —Ç–∞–∫–æ–µ –æ–ø—É—Ö–æ–ª—å –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–æ–∑–≥–∞?")
st.sidebar.info(
    """
    –û–ø—É—Ö–æ–ª—å –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–æ–∑–≥–∞ - —ç—Ç–æ —Å–∫–æ–ø–ª–µ–Ω–∏–µ –∏–ª–∏ –º–∞—Å—Å–∞ –∞–Ω–æ–º–∞–ª—å–Ω—ã—Ö –∫–ª–µ—Ç–æ–∫ –≤ –≤–∞—à–µ–º –º–æ–∑–≥–µ. –í–∞—à —á–µ—Ä–µ–ø, –∫–æ—Ç–æ—Ä—ã–π –æ–∫—Ä—É–∂–∞–µ—Ç –≤–∞—à –º–æ–∑–≥, –æ—á–µ–Ω—å –∂–µ—Å—Ç–∫–∏–π. –õ—é–±–æ–π —Ä–æ—Å—Ç –≤–Ω—É—Ç—Ä–∏ —Ç–∞–∫–æ–≥–æ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–≥–æ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞ –º–æ–∂–µ—Ç –≤—ã–∑–≤–∞—Ç—å –ø—Ä–æ–±–ª–µ–º—ã. 
    """
)
st.sidebar.info(
    """
    –û–ø—É—Ö–æ–ª–∏ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–æ–∑–≥–∞ –º–æ–≥—É—Ç –±—ã—Ç—å —Ä–∞–∫–æ–≤—ã–º–∏ (–∑–ª–æ–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–º–∏) –∏–ª–∏ –Ω–µ—Ä–∞–∫–æ–≤—ã–º–∏ (–¥–æ–±—Ä–æ–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–º–∏). –ö–æ–≥–¥–∞ –¥–æ–±—Ä–æ–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –∏–ª–∏ –∑–ª–æ–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –æ–ø—É—Ö–æ–ª–∏ —Ä–∞—Å—Ç—É—Ç, –æ–Ω–∏ –º–æ–≥—É—Ç –ø—Ä–∏–≤–µ—Å—Ç–∏ –∫ —É–≤–µ–ª–∏—á–µ–Ω–∏—é –¥–∞–≤–ª–µ–Ω–∏—è –≤–Ω—É—Ç—Ä–∏ –≤–∞—à–µ–≥–æ —á–µ—Ä–µ–ø–∞. –≠—Ç–æ –º–æ–∂–µ—Ç –ø—Ä–∏–≤–µ—Å—Ç–∏ –∫ –ø–æ–≤—Ä–µ–∂–¥–µ–Ω–∏—é –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–æ–∑–≥–∞ –∏ –±—ã—Ç—å –æ–ø–∞—Å–Ω—ã–º –¥–ª—è –∂–∏–∑–Ω–∏.
    """
)

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
def upload():
    
    st.divider()
    
    show_data = st.sidebar.selectbox('–í—ã–±—Ä–∞—Ç—å –æ–ø–µ—Ä–∞—Ü–∏—é', ('–ö–ª–∞—Å—Å–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞—Ç—å –æ–ø—É—Ö–æ–ª—å', '–í–∏–¥—ã –æ–ø—É—Ö–æ–ª–µ–π', '–ù–µ–π—Ä–æ—Å–µ—Ç—å'))
    
    if show_data == '–ù–µ–π—Ä–æ—Å–µ—Ç—å':
        
        st.subheader('–ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ –º–æ–¥–µ–ª–∏')
        st.markdown(
            "##### –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –º–æ–¥–µ–ª–∏ PyTorch: [efficientnet-b1](https://pytorch.org/vision/main/models/generated/torchvision.models.efficientnet_b1.html).")
        
        architecture = Image.open('web/efficient-net/architecture.png')
        perfomance = Image.open('web/efficient-net/perfomance.png')
        
        st.image(architecture, caption='Network Architecture')
        st.image(perfomance, caption='Network Perfomance')
        
    elif show_data == '–í–∏–¥—ã –æ–ø—É—Ö–æ–ª–µ–π':
        
        st.subheader('–ü—Ä–∏–º–µ—Ä—ã –ú–†–¢ —Å–Ω–∏–º–∫–æ–≤')
        
        tab1, tab2, tab3 = st.tabs(["–ì–ª–∏–æ–º–∞", "–ú–µ–Ω–∏–Ω–≥–∏–æ–º–∞", "–ì–∏–ø–æ—Ñ–∏–∑"])
        
        image1 = Image.open('web/Glioma.png')
        image2 = Image.open('web/Meningioma.png')
        image3 = Image.open('web/Pituitary.png')
        
        with tab1:
            st.image(image1, caption='–ü—Ä–∏–º–µ—Ä –ú–†–¢ —Å–Ω–∏–º–∫–∞: –ì–õ–ò–û–ú–ê')
            st.divider()
            st.write("""–ì–ª–∏–æ–º–∞ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–æ–∑–≥–∞ ‚Äî –Ω–∞–∏–±–æ–ª–µ–µ —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–Ω–∞—è –æ–ø—É—Ö–æ–ª—å –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–æ–∑–≥–∞, –±–µ—Ä—É—â–∞—è —Å–≤–æ–µ –Ω–∞—á–∞–ª–æ –∏–∑ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –∫–ª–µ—Ç–æ–∫ –≥–ª–∏–∏. –ö–ª–∏–Ω–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ—è–≤–ª–µ–Ω–∏—è –≥–ª–∏–æ–º—ã –∑–∞–≤–∏—Å—è—Ç –æ—Ç –µ–µ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏—è –∏ –º–æ–≥—É—Ç –≤–∫–ª—é—á–∞—Ç—å –≥–æ–ª–æ–≤–Ω—É—é –±–æ–ª—å, —Ç–æ—à–Ω–æ—Ç—É, –≤–µ—Å—Ç–∏–±—É–ª—è—Ä–Ω—É—é –∞—Ç–∞–∫—Å–∏—é, —Ä–∞—Å—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –∑—Ä–µ–Ω–∏—è, –ø–∞—Ä–µ–∑—ã –∏ –ø–∞—Ä–∞–ª–∏—á–∏, –¥–∏–∑–∞—Ä—Ç—Ä–∏—é, –Ω–∞—Ä—É—à–µ–Ω–∏—è —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏, —Å—É–¥–æ—Ä–æ–∂–Ω—ã–µ –ø—Ä–∏—Å—Ç—É–ø—ã –∏ –ø—Ä–æ—á–µ–µ""")
            st.write("""–ì–ª–∏–æ–º–∞ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–æ–∑–≥–∞ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏—Ä—É–µ—Ç—Å—è –ø–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º –ú–†–¢ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–æ–∑–≥–∞ –∏ –º–æ—Ä—Ñ–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–≥–æ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è –æ–ø—É—Ö–æ–ª–µ–≤—ã—Ö —Ç–∫–∞–Ω–µ–π. –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∏–º–µ–µ—Ç –ø—Ä–æ–≤–µ–¥–µ–Ω–∏–µ –≠—Ö–æ-–≠–ì, –≠–≠–ì, –∞–Ω–≥–∏–æ–≥—Ä–∞—Ñ–∏–∏ —Å–æ—Å—É–¥–æ–≤ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–æ–∑–≥–∞, –≠–≠–ì, –æ—Ñ—Ç–∞–ª—å–º–æ—Å–∫–æ–ø–∏–∏, –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è —Ü–µ—Ä–µ–±—Ä–æ—Å–ø–∏–Ω–∞–ª—å–Ω–æ–π –∂–∏–¥–∫–æ—Å—Ç–∏, –ü–≠–¢ –∏ —Å—Ü–∏–Ω—Ç–∏–≥—Ä–∞—Ñ–∏–∏. –û–±—â–µ–ø—Ä–∏–Ω—è—Ç—ã–º–∏ —Å–ø–æ—Å–æ–±–∞–º–∏ –ª–µ—á–µ–Ω–∏—è –≤ –æ—Ç–Ω–æ—à–µ–Ω–∏–∏ –≥–ª–∏–æ–º—ã –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–æ–∑–≥–∞ —è–≤–ª—è—é—Ç—Å—è —Ö–∏—Ä—É—Ä–≥–∏—á–µ—Å–∫–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ, –ª—É—á–µ–≤–∞—è —Ç–µ—Ä–∞–ø–∏—è, —Å—Ç–µ—Ä–µ–æ—Ç–∞–∫—Å–∏—á–µ—Å–∫–∞—è —Ä–∞–¥–∏–æ—Ö–∏—Ä—É—Ä–≥–∏—è –∏ —Ö–∏–º–∏–æ—Ç–µ—Ä–∞–ø–∏—è.""")
        
        with tab2:
            st.image(image2, caption='–ü—Ä–∏–º–µ—Ä –ú–†–¢ —Å–Ω–∏–º–∫–∞: –ú–ï–ù–ò–ù–ì–ò–û–ú–ê')
            st.divider()
            st.write("""–ú–µ–Ω–∏–Ω–≥–∏–æ–º–∞ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç —Å–æ–±–æ–π –æ–ø—É—Ö–æ–ª—å, —á–∞—â–µ –≤—Å–µ–≥–æ –¥–æ–±—Ä–æ–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–π –ø—Ä–∏—Ä–æ–¥—ã, –ø—Ä–æ–∏–∑—Ä–∞—Å—Ç–∞—é—â—É—é –∏–∑ –∞—Ä–∞—Ö–Ω–æ—ç–Ω–¥–æ—Ç–µ–ª–∏—è –º–æ–∑–≥–æ–≤—ã—Ö –æ–±–æ–ª–æ—á–µ–∫. –û–±—ã—á–Ω–æ –æ–ø—É—Ö–æ–ª—å –ª–æ–∫–∞–ª–∏–∑—É–µ—Ç—Å—è –Ω–∞ –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–∏ –º–æ–∑–≥–∞ (—Ä–µ–∂–µ –Ω–∞ –∫–æ–Ω–≤–µ–∫—Å–∏—Ç–∞–ª—å–Ω–æ–π –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–∏ –ª–∏–±–æ –Ω–∞ –æ—Å–Ω–æ–≤–∞–Ω–∏–∏ —á–µ—Ä–µ–ø–∞, —Ä–µ–¥–∫–æ –≤ –∂–µ–ª—É–¥–æ—á–∫–∞—Ö, –∏–ª–∏ –≤ –∫–æ—Å—Ç–Ω–æ–π —Ç–∫–∞–Ω–∏). –ö–∞–∫ –∏ –¥–ª—è –º–Ω–æ–≥–∏—Ö –¥—Ä—É–≥–∏—Ö –¥–æ–±—Ä–æ–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –æ–ø—É—Ö–æ–ª–µ–π, –¥–ª—è –º–µ–Ω–∏–Ω–≥–∏–æ–º —Ö–∞—Ä–∞–∫—Ç–µ—Ä–µ–Ω –º–µ–¥–ª–µ–Ω–Ω—ã–π —Ä–æ—Å—Ç. –î–æ–≤–æ–ª—å–Ω–æ —á–∞—Å—Ç–æ –Ω–µ –¥–∞–µ—Ç –æ —Å–µ–±–µ –∑–Ω–∞—Ç—å, –≤–ø–ª–æ—Ç—å –¥–æ –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ–≥–æ —É–≤–µ–ª–∏—á–µ–Ω–∏—è –Ω–æ–≤–æ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è; –∏–Ω–æ–≥–¥–∞ –±—ã–≤–∞–µ—Ç —Å–ª—É—á–∞–π–Ω–æ–π –Ω–∞—Ö–æ–¥–∫–æ–π –ø—Ä–∏ –∫–æ–º–ø—å—é—Ç–µ—Ä–Ω–æ–π –∏–ª–∏ –º–∞–≥–Ω–∏—Ç–Ω–æ-—Ä–µ–∑–æ–Ω–∞–Ω—Å–Ω–æ–π —Ç–æ–º–æ–≥—Ä–∞—Ñ–∏–∏.""")
            st.write("""–í –∫–ª–∏–Ω–∏—á–µ—Å–∫–æ–π –Ω–µ–≤—Ä–æ–ª–æ–≥–∏–∏ –º–µ–Ω–∏–Ω–≥–∏–æ–º–∞ –ø–æ —á–∞—Å—Ç–æ—Ç–µ –≤—Å—Ç—Ä–µ—á–∞–µ–º–æ—Å—Ç–∏ –∑–∞–Ω–∏–º–∞–µ—Ç –≤—Ç–æ—Ä–æ–µ –º–µ—Å—Ç–æ –ø–æ—Å–ª–µ –≥–ª–∏–æ–º. –í—Å–µ–≥–æ –º–µ–Ω–∏–Ω–≥–∏–æ–º—ã —Å–æ—Å—Ç–∞–≤–ª—è—é—Ç –ø—Ä–∏–º–µ—Ä–Ω–æ 20-25% –æ—Ç –≤—Å–µ—Ö –æ–ø—É—Ö–æ–ª–µ–π —Ü–µ–Ω—Ç—Ä–∞–ª—å–Ω–æ–π –Ω–µ—Ä–≤–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã. –ú–µ–Ω–∏–Ω–≥–∏–æ–º—ã –≤–æ–∑–Ω–∏–∫–∞—é—Ç –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–µ–Ω–Ω–æ —É –ª—é–¥–µ–π –≤ –≤–æ–∑—Ä–∞—Å—Ç–µ 35-70 –ª–µ—Ç; —á–∞—â–µ –≤—Å–µ–≥–æ –Ω–∞–±–ª—é–¥–∞—é—Ç—Å—è —É –∂–µ–Ω—â–∏–Ω. –£ –¥–µ—Ç–µ–π –≤—Å—Ç—Ä–µ—á–∞—é—Ç—Å—è –¥–æ–≤–æ–ª—å–Ω–æ —Ä–µ–¥–∫–æ –∏ —Å–æ—Å—Ç–∞–≤–ª—è—é—Ç –ø—Ä–∏–º–µ—Ä–Ω–æ 1,5% –æ—Ç –≤—Å–µ—Ö –¥–µ—Ç—Å–∫–∏—Ö –Ω–æ–≤–æ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–π –¶–ù–°. 8-10% –æ–ø—É—Ö–æ–ª–µ–π –ø–∞—É—Ç–∏–Ω–Ω–æ–π –º–æ–∑–≥–æ–≤–æ–π –æ–±–æ–ª–æ—á–∫–∏ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω—ã –∞—Ç–∏–ø–∏—á–Ω—ã–º–∏ –∏ –∑–ª–æ–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–º–∏ –º–µ–Ω–∏–Ω–≥–∏–æ–º–∞–º–∏.""")
            
        with tab3:
            st.image(image3, caption='–ü—Ä–∏–º–µ—Ä –ú–†–¢ —Å–Ω–∏–º–∫–∞: –û–ü–£–•–û–õ–¨ –ì–ò–ü–û–§–ò–ó–ê')
            st.divider()
            st.write("""–û–ø—É—Ö–æ–ª–∏ –≥–∏–ø–æ—Ñ–∏–∑–∞ ‚Äì –≥—Ä—É–ø–ø–∞ –¥–æ–±—Ä–æ–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö, —Ä–µ–∂–µ ‚Äì –∑–ª–æ–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –Ω–æ–≤–æ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–π –ø–µ—Ä–µ–¥–Ω–µ–π –¥–æ–ª–∏ (–∞–¥–µ–Ω–æ–≥–∏–ø–æ—Ñ–∏–∑–∞) –∏–ª–∏ –∑–∞–¥–Ω–µ–π –¥–æ–ª–∏ (–Ω–µ–π—Ä–æ–≥–∏–ø–æ—Ñ–∏–∑–∞) –∂–µ–ª–µ–∑—ã. –û–ø—É—Ö–æ–ª–∏ –≥–∏–ø–æ—Ñ–∏–∑–∞, –ø–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–µ, —Å–æ—Å—Ç–∞–≤–ª—è—é—Ç –æ–∫–æ–ª–æ 15% –Ω–æ–≤–æ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–π –≤–Ω—É—Ç—Ä–∏—á–µ—Ä–µ–ø–Ω–æ–π –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏–∏. –û–Ω–∏ –æ–¥–∏–Ω–∞–∫–æ–≤–æ —á–∞—Å—Ç–æ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏—Ä—É—é—Ç—Å—è —É –ª–∏—Ü –æ–±–æ–∏—Ö –ø–æ–ª–æ–≤, –æ–±—ã—á–Ω–æ –≤ –≤–æ–∑—Ä–∞—Å—Ç–µ 30-40 –ª–µ—Ç. –ü–æ–¥–∞–≤–ª—è—é—â–µ–µ –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ –æ–ø—É—Ö–æ–ª–µ–π –≥–∏–ø–æ—Ñ–∏–∑–∞ —Å–æ—Å—Ç–∞–≤–ª—è—é—Ç –∞–¥–µ–Ω–æ–º—ã, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–¥—Ä–∞–∑–¥–µ–ª—è—é—Ç—Å—è –Ω–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–∏–¥–æ–≤ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–∞–∑–º–µ—Ä–æ–≤ –∏ –≥–æ—Ä–º–æ–Ω–∞–ª—å–Ω–æ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏. –°–∏–º–ø—Ç–æ–º—ã –æ–ø—É—Ö–æ–ª–∏ –≥–∏–ø–æ—Ñ–∏–∑–∞ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—é—Ç —Å–æ–±–æ–π —Å–æ—á–µ—Ç–∞–Ω–∏–µ –ø—Ä–∏–∑–Ω–∞–∫–æ–≤ –æ–±—ä–µ–º–Ω–æ–≥–æ –≤–Ω—É—Ç—Ä–∏–º–æ–∑–≥–æ–≤–æ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞ –∏ –≥–æ—Ä–º–æ–Ω–∞–ª—å–Ω—ã—Ö –Ω–∞—Ä—É—à–µ–Ω–∏–π. –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –æ–ø—É—Ö–æ–ª–∏ –≥–∏–ø–æ—Ñ–∏–∑–∞ –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç—Å—è –ø—Ä–æ–≤–µ–¥–µ–Ω–∏–µ–º —Ü–µ–ª–æ–≥–æ —Ä—è–¥–∞ –∫–ª–∏–Ω–∏—á–µ—Å–∫–∏—Ö –∏ –≥–æ—Ä–º–æ–Ω–∞–ª—å–Ω—ã—Ö –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–π, –∞–Ω–≥–∏–æ–≥—Ä–∞—Ñ–∏–∏ –∏ –ú–†–¢ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–æ–∑–≥–∞.""")
            st.write("""–û–ø—É—Ö–æ–ª–∏ –≥–∏–ø–æ—Ñ–∏–∑–∞ ‚Äì –≥—Ä—É–ø–ø–∞ –¥–æ–±—Ä–æ–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö, —Ä–µ–∂–µ ‚Äì –∑–ª–æ–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –Ω–æ–≤–æ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–π –ø–µ—Ä–µ–¥–Ω–µ–π –¥–æ–ª–∏ (–∞–¥–µ–Ω–æ–≥–∏–ø–æ—Ñ–∏–∑–∞) –∏–ª–∏ –∑–∞–¥–Ω–µ–π –¥–æ–ª–∏ (–Ω–µ–π—Ä–æ–≥–∏–ø–æ—Ñ–∏–∑–∞) –∂–µ–ª–µ–∑—ã. –û–ø—É—Ö–æ–ª–∏ –≥–∏–ø–æ—Ñ–∏–∑–∞, –ø–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–µ, —Å–æ—Å—Ç–∞–≤–ª—è—é—Ç –æ–∫–æ–ª–æ 15% –Ω–æ–≤–æ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–π –≤–Ω—É—Ç—Ä–∏—á–µ—Ä–µ–ø–Ω–æ–π –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏–∏. –û–Ω–∏ –æ–¥–∏–Ω–∞–∫–æ–≤–æ —á–∞—Å—Ç–æ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏—Ä—É—é—Ç—Å—è —É –ª–∏—Ü –æ–±–æ–∏—Ö –ø–æ–ª–æ–≤, –æ–±—ã—á–Ω–æ –≤ –≤–æ–∑—Ä–∞—Å—Ç–µ 30-40 –ª–µ—Ç.""")
        
    elif show_data == '–ö–ª–∞—Å—Å–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞—Ç—å –æ–ø—É—Ö–æ–ª—å':
        
        with st.spinner('–ù–µ–π—Ä–æ—Å–µ—Ç—å –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è...'):
            model = EfficientNetModel('efficientnet-b1', path_to_model_dict='my-efficientnet-b1')

        st.success('–ù–µ–π—Ä–æ—Å–µ—Ç—å –∑–∞–≥—Ä—É–∂–µ–Ω–∞! –í—Å—ë –≥–æ—Ç–æ–≤–æ –∫ –∑–∞–≥—Ä—É–∑–∫–µ —Å–Ω–∏–º–∫–∞!', icon="‚úÖ")
        
        # –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–∞
        uploaded_file = st.file_uploader("–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª")

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –¥–æ–ø—É—Å—Ç–∏–º–æ—Å—Ç—å —Ñ–æ—Ä–º–∞—Ç–∞ —Ñ–∞–π–ª–∞
        if uploaded_file is not None:

            # –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ —Ñ–æ—Ä–º–∞—Ç–∞
            format_name = uploaded_file.name.split('.')[1]

            # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞
            if format_name == "png":
                image = Image.open(uploaded_file)
            elif format_name == "jpeg":
                image = Image.open(uploaded_file)
            elif format_name == "jpg":
                image = Image.open(uploaded_file)
            else:
                st.write("–ú–æ–∂–Ω–æ –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ç–æ–ª—å–∫–æ —Ñ–∞–π–ª—ã —Ñ–æ—Ä–º–∞—Ç–∞ png –∏–ª–∏ jpeg (jpg).")
                st.write("–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞!")
                return 0
            
            classes = ['–ú–ï–ù–ò–ù–ì–ò–û–ú–ê', '–ì–õ–ò–û–ú–ê', '–û–ü–£–•–û–õ–¨ –ì–ò–ü–û–§–ò–ó–ê']
            
            st.image(image, caption='–ó–ê–ì–†–£–ñ–ï–ù–ù–´–ô –°–ù–ò–ú–û–ö')
            
            transforms = T.Compose([
                T.Resize((224, 224)),
                T.ToTensor(),
                T.Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225])
            ])
            
            img_tensor = transforms(image)
            img_tensor = img_tensor.unsqueeze(0)
            
            batched_images = torch.cat([img_tensor, img_tensor, img_tensor, img_tensor], dim=0)
            
            probs = model.predict_item(batched_images)[0]
            
            with st.spinner('–ü–æ–¥–æ–∂–¥–∏—Ç–µ, —Å–Ω–∏–º–æ–∫ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è...'):
                sleep(3)
            
            index = np.argmax(probs)
            st.info('–†–µ–∑—É–ª—å—Ç–∞—Ç –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏ –º–æ–¥–µ–ª–∏: ' + classes[index], icon="‚ùó")
            st.info('–í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å: ' + str(probs[index]), icon="‚ùó")

        
if __name__ == "__main__":
    upload()
